============
random notes
============



To cancel ongoing operation in brutal way:
==========================================

connection.socket().setblocking(0)

try:
    typ, fetched_data = connection.fetch(message_set, message_parts)
except ssl.SSLError as err:
    errno, string = err
    if errno in (ssl.SSL_ERROR_WANT_READ, ssl.SSL_ERROR_WANT_WRITE) and 0 == connection.socket().gettimeout():
        print "OPERATION CANCELED"
        connection.socket().setblocking(1)
        ...



To get time from rfc822 message
===============================

time.localtime(email.utils.mktime_tz(email.utils.parsedate_tz("Mon, 28 Nov 2011 05:33:17 -0800 (PST)")))



To use IMAP4.search
===================

def number_set(seq):
    seq.sort()
    return ','.join(map(lambda t: str(t[0]) if t[0]==t[1] else "{0:d}:{1:d}".format(*t),
            zip([i for n,i in enumerate(seq) if n == 0 or i - seq[n-1] > 1],
                [i for n,i in enumerate(seq) if n+1 == len(seq) or seq[n+1] - i > 1])))

typ, search_data = connection.uid('SEARCH', None, *criteria)
for search_batch in search_data:
    message_set = number_set([int(i) for i in search_batch.split()])
    typ, fetch_data = connection.uid("FETCH", message_set, '(BODY[HEADER.FIELDS (DATE FROM SUBJECT)])')
    for msg in itertools.islice(fetch_data, 0, None, 2):
        print msg[1]



unicode sumbols for geometric shapes
====================================

http://en.wikipedia.org/wiki/Geometric_Shapes

Right arrow to be used in count bubles - unichr(0x25B6) / unicode('\x25B6')
